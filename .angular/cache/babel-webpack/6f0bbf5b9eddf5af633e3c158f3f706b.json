{"ast":null,"code":"import _asyncToGenerator from \"C:/cursos_Udemy/Angular/listado-personas/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport '@firebase/installations';\nimport { Component } from '@firebase/component';\nimport { openDb, deleteDb } from 'idb';\nimport { ErrorFactory, isIndexedDBAvailable, validateIndexedDBOpenable, areCookiesEnabled, getModularInstance } from '@firebase/util';\nimport { _registerComponent, registerVersion, getApp, _getProvider } from '@firebase/app';\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nconst DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nconst DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\nconst DEFAULT_VAPID_KEY = 'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\nconst ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\nconst CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nconst CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\nconst CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\n\nconst CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\nvar MessageType$1;\n\n(function (MessageType) {\n  MessageType[MessageType[\"DATA_MESSAGE\"] = 1] = \"DATA_MESSAGE\";\n  MessageType[MessageType[\"DISPLAY_NOTIFICATION\"] = 3] = \"DISPLAY_NOTIFICATION\";\n})(MessageType$1 || (MessageType$1 = {}));\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\r\n * in compliance with the License. You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n * or implied. See the License for the specific language governing permissions and limitations under\r\n * the License.\r\n */\n\n\nvar MessageType;\n\n(function (MessageType) {\n  MessageType[\"PUSH_RECEIVED\"] = \"push-received\";\n  MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\n})(MessageType || (MessageType = {}));\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction arrayToBase64(array) {\n  const uint8Array = new Uint8Array(array);\n  const base64String = btoa(String.fromCharCode(...uint8Array));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nfunction base64ToArray(base64String) {\n  const padding = '='.repeat((4 - base64String.length % 4) % 4);\n  const base64 = (base64String + padding).replace(/\\-/g, '+').replace(/_/g, '/');\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n\n  return outputArray;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nconst OLD_DB_NAME = 'fcm_token_details_db';\n/**\r\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\r\n * callback is called for all versions of the old DB.\r\n */\n\nconst OLD_DB_VERSION = 5;\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nfunction migrateOldDatabase(_x) {\n  return _migrateOldDatabase.apply(this, arguments);\n}\n\nfunction _migrateOldDatabase() {\n  _migrateOldDatabase = _asyncToGenerator(function* (senderId) {\n    if ('databases' in indexedDB) {\n      // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\n      // typecast when it lands in TS types.\n      const databases = yield indexedDB.databases();\n      const dbNames = databases.map(db => db.name);\n\n      if (!dbNames.includes(OLD_DB_NAME)) {\n        // old DB didn't exist, no need to open.\n        return null;\n      }\n    }\n\n    let tokenDetails = null;\n    const db = yield openDb(OLD_DB_NAME, OLD_DB_VERSION, /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (db) {\n        var _a;\n\n        if (db.oldVersion < 2) {\n          // Database too old, skip migration.\n          return;\n        }\n\n        if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n          // Database did not exist. Nothing to do.\n          return;\n        }\n\n        const objectStore = db.transaction.objectStore(OLD_OBJECT_STORE_NAME);\n        const value = yield objectStore.index('fcmSenderId').get(senderId);\n        yield objectStore.clear();\n\n        if (!value) {\n          // No entry in the database, nothing to migrate.\n          return;\n        }\n\n        if (db.oldVersion === 2) {\n          const oldDetails = value;\n\n          if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n            return;\n          }\n\n          tokenDetails = {\n            token: oldDetails.fcmToken,\n            createTime: (_a = oldDetails.createTime) !== null && _a !== void 0 ? _a : Date.now(),\n            subscriptionOptions: {\n              auth: oldDetails.auth,\n              p256dh: oldDetails.p256dh,\n              endpoint: oldDetails.endpoint,\n              swScope: oldDetails.swScope,\n              vapidKey: typeof oldDetails.vapidKey === 'string' ? oldDetails.vapidKey : arrayToBase64(oldDetails.vapidKey)\n            }\n          };\n        } else if (db.oldVersion === 3) {\n          const oldDetails = value;\n          tokenDetails = {\n            token: oldDetails.fcmToken,\n            createTime: oldDetails.createTime,\n            subscriptionOptions: {\n              auth: arrayToBase64(oldDetails.auth),\n              p256dh: arrayToBase64(oldDetails.p256dh),\n              endpoint: oldDetails.endpoint,\n              swScope: oldDetails.swScope,\n              vapidKey: arrayToBase64(oldDetails.vapidKey)\n            }\n          };\n        } else if (db.oldVersion === 4) {\n          const oldDetails = value;\n          tokenDetails = {\n            token: oldDetails.fcmToken,\n            createTime: oldDetails.createTime,\n            subscriptionOptions: {\n              auth: arrayToBase64(oldDetails.auth),\n              p256dh: arrayToBase64(oldDetails.p256dh),\n              endpoint: oldDetails.endpoint,\n              swScope: oldDetails.swScope,\n              vapidKey: arrayToBase64(oldDetails.vapidKey)\n            }\n          };\n        }\n      });\n\n      return function (_x36) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    db.close(); // Delete all old databases.\n\n    yield deleteDb(OLD_DB_NAME);\n    yield deleteDb('fcm_vapid_details_db');\n    yield deleteDb('undefined');\n    return checkTokenDetails(tokenDetails) ? tokenDetails : null;\n  });\n  return _migrateOldDatabase.apply(this, arguments);\n}\n\nfunction checkTokenDetails(tokenDetails) {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n\n  const {\n    subscriptionOptions\n  } = tokenDetails;\n  return typeof tokenDetails.createTime === 'number' && tokenDetails.createTime > 0 && typeof tokenDetails.token === 'string' && tokenDetails.token.length > 0 && typeof subscriptionOptions.auth === 'string' && subscriptionOptions.auth.length > 0 && typeof subscriptionOptions.p256dh === 'string' && subscriptionOptions.p256dh.length > 0 && typeof subscriptionOptions.endpoint === 'string' && subscriptionOptions.endpoint.length > 0 && typeof subscriptionOptions.swScope === 'string' && subscriptionOptions.swScope.length > 0 && typeof subscriptionOptions.vapidKey === 'string' && subscriptionOptions.vapidKey.length > 0;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Exported for tests.\n\n\nconst DATABASE_NAME = 'firebase-messaging-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\nlet dbPromise = null;\n\nfunction getDbPromise() {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDb => {\n      // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n      // because if there are multiple versions between the old version and the current version, we\n      // want ALL the migrations that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDb.oldVersion) {\n        case 0:\n          upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n\n  return dbPromise;\n}\n/** Gets record(s) from the objectStore that match the given key. */\n\n\nfunction dbGet(_x2) {\n  return _dbGet.apply(this, arguments);\n}\n/** Assigns or overwrites the record for the given key with the given value. */\n\n\nfunction _dbGet() {\n  _dbGet = _asyncToGenerator(function* (firebaseDependencies) {\n    const key = getKey(firebaseDependencies);\n    const db = yield getDbPromise();\n    const tokenDetails = yield db.transaction(OBJECT_STORE_NAME).objectStore(OBJECT_STORE_NAME).get(key);\n\n    if (tokenDetails) {\n      return tokenDetails;\n    } else {\n      // Check if there is a tokenDetails object in the old DB.\n      const oldTokenDetails = yield migrateOldDatabase(firebaseDependencies.appConfig.senderId);\n\n      if (oldTokenDetails) {\n        yield dbSet(firebaseDependencies, oldTokenDetails);\n        return oldTokenDetails;\n      }\n    }\n  });\n  return _dbGet.apply(this, arguments);\n}\n\nfunction dbSet(_x3, _x4) {\n  return _dbSet.apply(this, arguments);\n}\n/** Removes record(s) from the objectStore that match the given key. */\n\n\nfunction _dbSet() {\n  _dbSet = _asyncToGenerator(function* (firebaseDependencies, tokenDetails) {\n    const key = getKey(firebaseDependencies);\n    const db = yield getDbPromise();\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n    yield tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n    yield tx.complete;\n    return tokenDetails;\n  });\n  return _dbSet.apply(this, arguments);\n}\n\nfunction dbRemove(_x5) {\n  return _dbRemove.apply(this, arguments);\n}\n\nfunction _dbRemove() {\n  _dbRemove = _asyncToGenerator(function* (firebaseDependencies) {\n    const key = getKey(firebaseDependencies);\n    const db = yield getDbPromise();\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n    yield tx.objectStore(OBJECT_STORE_NAME).delete(key);\n    yield tx.complete;\n  });\n  return _dbRemove.apply(this, arguments);\n}\n\nfunction getKey({\n  appConfig\n}) {\n  return appConfig.appId;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nconst ERROR_MAP = {\n  [\"missing-app-config-values\"\n  /* MISSING_APP_CONFIG_VALUES */\n  ]: 'Missing App configuration value: \"{$valueName}\"',\n  [\"only-available-in-window\"\n  /* AVAILABLE_IN_WINDOW */\n  ]: 'This method is available in a Window context.',\n  [\"only-available-in-sw\"\n  /* AVAILABLE_IN_SW */\n  ]: 'This method is available in a service worker context.',\n  [\"permission-default\"\n  /* PERMISSION_DEFAULT */\n  ]: 'The notification permission was not granted and dismissed instead.',\n  [\"permission-blocked\"\n  /* PERMISSION_BLOCKED */\n  ]: 'The notification permission was not granted and blocked instead.',\n  [\"unsupported-browser\"\n  /* UNSUPPORTED_BROWSER */\n  ]: \"This browser doesn't support the API's required to use the Firebase SDK.\",\n  [\"indexed-db-unsupported\"\n  /* INDEXED_DB_UNSUPPORTED */\n  ]: \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\",\n  [\"failed-service-worker-registration\"\n  /* FAILED_DEFAULT_REGISTRATION */\n  ]: 'We are unable to register the default service worker. {$browserErrorMessage}',\n  [\"token-subscribe-failed\"\n  /* TOKEN_SUBSCRIBE_FAILED */\n  ]: 'A problem occurred while subscribing the user to FCM: {$errorInfo}',\n  [\"token-subscribe-no-token\"\n  /* TOKEN_SUBSCRIBE_NO_TOKEN */\n  ]: 'FCM returned no token when subscribing the user to push.',\n  [\"token-unsubscribe-failed\"\n  /* TOKEN_UNSUBSCRIBE_FAILED */\n  ]: 'A problem occurred while unsubscribing the ' + 'user from FCM: {$errorInfo}',\n  [\"token-update-failed\"\n  /* TOKEN_UPDATE_FAILED */\n  ]: 'A problem occurred while updating the user from FCM: {$errorInfo}',\n  [\"token-update-no-token\"\n  /* TOKEN_UPDATE_NO_TOKEN */\n  ]: 'FCM returned no token when updating the user to push.',\n  [\"use-sw-after-get-token\"\n  /* USE_SW_AFTER_GET_TOKEN */\n  ]: 'The useServiceWorker() method may only be called once and must be ' + 'called before calling getToken() to ensure your service worker is used.',\n  [\"invalid-sw-registration\"\n  /* INVALID_SW_REGISTRATION */\n  ]: 'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\n  [\"invalid-bg-handler\"\n  /* INVALID_BG_HANDLER */\n  ]: 'The input to setBackgroundMessageHandler() must be a function.',\n  [\"invalid-vapid-key\"\n  /* INVALID_VAPID_KEY */\n  ]: 'The public VAPID key must be a string.',\n  [\"use-vapid-key-after-get-token\"\n  /* USE_VAPID_KEY_AFTER_GET_TOKEN */\n  ]: 'The usePublicVapidKey() method may only be called once and must be ' + 'called before calling getToken() to ensure your VAPID key is used.'\n};\nconst ERROR_FACTORY = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nfunction requestGetToken(_x6, _x7) {\n  return _requestGetToken.apply(this, arguments);\n}\n\nfunction _requestGetToken() {\n  _requestGetToken = _asyncToGenerator(function* (firebaseDependencies, subscriptionOptions) {\n    const headers = yield getHeaders(firebaseDependencies);\n    const body = getBody(subscriptionOptions);\n    const subscribeOptions = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body)\n    };\n    let responseData;\n\n    try {\n      const response = yield fetch(getEndpoint(firebaseDependencies.appConfig), subscribeOptions);\n      responseData = yield response.json();\n    } catch (err) {\n      throw ERROR_FACTORY.create(\"token-subscribe-failed\"\n      /* TOKEN_SUBSCRIBE_FAILED */\n      , {\n        errorInfo: err\n      });\n    }\n\n    if (responseData.error) {\n      const message = responseData.error.message;\n      throw ERROR_FACTORY.create(\"token-subscribe-failed\"\n      /* TOKEN_SUBSCRIBE_FAILED */\n      , {\n        errorInfo: message\n      });\n    }\n\n    if (!responseData.token) {\n      throw ERROR_FACTORY.create(\"token-subscribe-no-token\"\n      /* TOKEN_SUBSCRIBE_NO_TOKEN */\n      );\n    }\n\n    return responseData.token;\n  });\n  return _requestGetToken.apply(this, arguments);\n}\n\nfunction requestUpdateToken(_x8, _x9) {\n  return _requestUpdateToken.apply(this, arguments);\n}\n\nfunction _requestUpdateToken() {\n  _requestUpdateToken = _asyncToGenerator(function* (firebaseDependencies, tokenDetails) {\n    const headers = yield getHeaders(firebaseDependencies);\n    const body = getBody(tokenDetails.subscriptionOptions);\n    const updateOptions = {\n      method: 'PATCH',\n      headers,\n      body: JSON.stringify(body)\n    };\n    let responseData;\n\n    try {\n      const response = yield fetch(`${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`, updateOptions);\n      responseData = yield response.json();\n    } catch (err) {\n      throw ERROR_FACTORY.create(\"token-update-failed\"\n      /* TOKEN_UPDATE_FAILED */\n      , {\n        errorInfo: err\n      });\n    }\n\n    if (responseData.error) {\n      const message = responseData.error.message;\n      throw ERROR_FACTORY.create(\"token-update-failed\"\n      /* TOKEN_UPDATE_FAILED */\n      , {\n        errorInfo: message\n      });\n    }\n\n    if (!responseData.token) {\n      throw ERROR_FACTORY.create(\"token-update-no-token\"\n      /* TOKEN_UPDATE_NO_TOKEN */\n      );\n    }\n\n    return responseData.token;\n  });\n  return _requestUpdateToken.apply(this, arguments);\n}\n\nfunction requestDeleteToken(_x10, _x11) {\n  return _requestDeleteToken.apply(this, arguments);\n}\n\nfunction _requestDeleteToken() {\n  _requestDeleteToken = _asyncToGenerator(function* (firebaseDependencies, token) {\n    const headers = yield getHeaders(firebaseDependencies);\n    const unsubscribeOptions = {\n      method: 'DELETE',\n      headers\n    };\n\n    try {\n      const response = yield fetch(`${getEndpoint(firebaseDependencies.appConfig)}/${token}`, unsubscribeOptions);\n      const responseData = yield response.json();\n\n      if (responseData.error) {\n        const message = responseData.error.message;\n        throw ERROR_FACTORY.create(\"token-unsubscribe-failed\"\n        /* TOKEN_UNSUBSCRIBE_FAILED */\n        , {\n          errorInfo: message\n        });\n      }\n    } catch (err) {\n      throw ERROR_FACTORY.create(\"token-unsubscribe-failed\"\n      /* TOKEN_UNSUBSCRIBE_FAILED */\n      , {\n        errorInfo: err\n      });\n    }\n  });\n  return _requestDeleteToken.apply(this, arguments);\n}\n\nfunction getEndpoint({\n  projectId\n}) {\n  return `${ENDPOINT}/projects/${projectId}/registrations`;\n}\n\nfunction getHeaders(_x12) {\n  return _getHeaders.apply(this, arguments);\n}\n\nfunction _getHeaders() {\n  _getHeaders = _asyncToGenerator(function* ({\n    appConfig,\n    installations\n  }) {\n    const authToken = yield installations.getToken();\n    return new Headers({\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      'x-goog-api-key': appConfig.apiKey,\n      'x-goog-firebase-installations-auth': `FIS ${authToken}`\n    });\n  });\n  return _getHeaders.apply(this, arguments);\n}\n\nfunction getBody({\n  p256dh,\n  auth,\n  endpoint,\n  vapidKey\n}) {\n  const body = {\n    web: {\n      endpoint,\n      auth,\n      p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// UpdateRegistration will be called once every week.\n\n\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nfunction getTokenInternal(_x13) {\n  return _getTokenInternal.apply(this, arguments);\n}\n/**\r\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\r\n * the push subscription if it exists.\r\n */\n\n\nfunction _getTokenInternal() {\n  _getTokenInternal = _asyncToGenerator(function* (messaging) {\n    const pushSubscription = yield getPushSubscription(messaging.swRegistration, messaging.vapidKey);\n    const subscriptionOptions = {\n      vapidKey: messaging.vapidKey,\n      swScope: messaging.swRegistration.scope,\n      endpoint: pushSubscription.endpoint,\n      auth: arrayToBase64(pushSubscription.getKey('auth')),\n      p256dh: arrayToBase64(pushSubscription.getKey('p256dh'))\n    };\n    const tokenDetails = yield dbGet(messaging.firebaseDependencies);\n\n    if (!tokenDetails) {\n      // No token, get a new one.\n      return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\n    } else if (!isTokenValid(tokenDetails.subscriptionOptions, subscriptionOptions)) {\n      // Invalid token, get a new one.\n      try {\n        yield requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\n      } catch (e) {\n        // Suppress errors because of #2364\n        console.warn(e);\n      }\n\n      return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\n    } else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n      // Weekly token refresh\n      return updateToken(messaging, {\n        token: tokenDetails.token,\n        createTime: Date.now(),\n        subscriptionOptions\n      });\n    } else {\n      // Valid token, nothing to do.\n      return tokenDetails.token;\n    }\n  });\n  return _getTokenInternal.apply(this, arguments);\n}\n\nfunction deleteTokenInternal(_x14) {\n  return _deleteTokenInternal.apply(this, arguments);\n}\n\nfunction _deleteTokenInternal() {\n  _deleteTokenInternal = _asyncToGenerator(function* (messaging) {\n    const tokenDetails = yield dbGet(messaging.firebaseDependencies);\n\n    if (tokenDetails) {\n      yield requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\n      yield dbRemove(messaging.firebaseDependencies);\n    } // Unsubscribe from the push subscription.\n\n\n    const pushSubscription = yield messaging.swRegistration.pushManager.getSubscription();\n\n    if (pushSubscription) {\n      return pushSubscription.unsubscribe();\n    } // If there's no SW, consider it a success.\n\n\n    return true;\n  });\n  return _deleteTokenInternal.apply(this, arguments);\n}\n\nfunction updateToken(_x15, _x16) {\n  return _updateToken.apply(this, arguments);\n}\n\nfunction _updateToken() {\n  _updateToken = _asyncToGenerator(function* (messaging, tokenDetails) {\n    try {\n      const updatedToken = yield requestUpdateToken(messaging.firebaseDependencies, tokenDetails);\n      const updatedTokenDetails = Object.assign(Object.assign({}, tokenDetails), {\n        token: updatedToken,\n        createTime: Date.now()\n      });\n      yield dbSet(messaging.firebaseDependencies, updatedTokenDetails);\n      return updatedToken;\n    } catch (e) {\n      yield deleteTokenInternal(messaging);\n      throw e;\n    }\n  });\n  return _updateToken.apply(this, arguments);\n}\n\nfunction getNewToken(_x17, _x18) {\n  return _getNewToken.apply(this, arguments);\n}\n/**\r\n * Gets a PushSubscription for the current user.\r\n */\n\n\nfunction _getNewToken() {\n  _getNewToken = _asyncToGenerator(function* (firebaseDependencies, subscriptionOptions) {\n    const token = yield requestGetToken(firebaseDependencies, subscriptionOptions);\n    const tokenDetails = {\n      token,\n      createTime: Date.now(),\n      subscriptionOptions\n    };\n    yield dbSet(firebaseDependencies, tokenDetails);\n    return tokenDetails.token;\n  });\n  return _getNewToken.apply(this, arguments);\n}\n\nfunction getPushSubscription(_x19, _x20) {\n  return _getPushSubscription.apply(this, arguments);\n}\n/**\r\n * Checks if the saved tokenDetails object matches the configuration provided.\r\n */\n\n\nfunction _getPushSubscription() {\n  _getPushSubscription = _asyncToGenerator(function* (swRegistration, vapidKey) {\n    const subscription = yield swRegistration.pushManager.getSubscription();\n\n    if (subscription) {\n      return subscription;\n    }\n\n    return swRegistration.pushManager.subscribe({\n      userVisibleOnly: true,\n      // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n      // submitted to pushManager#subscribe must be of type Uint8Array.\n      applicationServerKey: base64ToArray(vapidKey)\n    });\n  });\n  return _getPushSubscription.apply(this, arguments);\n}\n\nfunction isTokenValid(dbOptions, currentOptions) {\n  const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  const isAuthEqual = currentOptions.auth === dbOptions.auth;\n  const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction externalizePayload(internalPayload) {\n  const payload = {\n    from: internalPayload.from,\n    // eslint-disable-next-line camelcase\n    collapseKey: internalPayload.collapse_key,\n    // eslint-disable-next-line camelcase\n    messageId: internalPayload.fcm_message_id\n  };\n  propagateNotificationPayload(payload, internalPayload);\n  propagateDataPayload(payload, internalPayload);\n  propagateFcmOptions(payload, internalPayload);\n  return payload;\n}\n\nfunction propagateNotificationPayload(payload, messagePayloadInternal) {\n  if (!messagePayloadInternal.notification) {\n    return;\n  }\n\n  payload.notification = {};\n  const title = messagePayloadInternal.notification.title;\n\n  if (!!title) {\n    payload.notification.title = title;\n  }\n\n  const body = messagePayloadInternal.notification.body;\n\n  if (!!body) {\n    payload.notification.body = body;\n  }\n\n  const image = messagePayloadInternal.notification.image;\n\n  if (!!image) {\n    payload.notification.image = image;\n  }\n}\n\nfunction propagateDataPayload(payload, messagePayloadInternal) {\n  if (!messagePayloadInternal.data) {\n    return;\n  }\n\n  payload.data = messagePayloadInternal.data;\n}\n\nfunction propagateFcmOptions(payload, messagePayloadInternal) {\n  if (!messagePayloadInternal.fcmOptions) {\n    return;\n  }\n\n  payload.fcmOptions = {};\n  const link = messagePayloadInternal.fcmOptions.link;\n\n  if (!!link) {\n    payload.fcmOptions.link = link;\n  } // eslint-disable-next-line camelcase\n\n\n  const analyticsLabel = messagePayloadInternal.fcmOptions.analytics_label;\n\n  if (!!analyticsLabel) {\n    payload.fcmOptions.analyticsLabel = analyticsLabel;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isConsoleMessage(data) {\n  // This message has a campaign ID, meaning it was sent using the Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n_mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\n\n_mergeStrings('AzSCbw63g1R0nCw85jG8', 'Iaya3yLKwmgvh7cF0q4');\n\nfunction _mergeStrings(s1, s2) {\n  const resultArray = [];\n\n  for (let i = 0; i < s1.length; i++) {\n    resultArray.push(s1.charAt(i));\n\n    if (i < s2.length) {\n      resultArray.push(s2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction extractAppConfig(app) {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  } // Required app config keys\n\n\n  const configKeys = ['projectId', 'apiKey', 'appId', 'messagingSenderId'];\n  const {\n    options\n  } = app;\n\n  for (const keyName of configKeys) {\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId,\n    apiKey: options.apiKey,\n    appId: options.appId,\n    senderId: options.messagingSenderId\n  };\n}\n\nfunction getMissingValueError(valueName) {\n  return ERROR_FACTORY.create(\"missing-app-config-values\"\n  /* MISSING_APP_CONFIG_VALUES */\n  , {\n    valueName\n  });\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nclass MessagingService {\n  constructor(app, installations, analyticsProvider) {\n    // logging is only done with end user consent. Default to false.\n    this.deliveryMetricsExportedToBigQueryEnabled = false;\n    this.onBackgroundMessageHandler = null;\n    this.onMessageHandler = null;\n    this.logEvents = [];\n    this.isLogServiceStarted = false;\n    const appConfig = extractAppConfig(app);\n    this.firebaseDependencies = {\n      app,\n      appConfig,\n      installations,\n      analyticsProvider\n    };\n  }\n\n  _delete() {\n    return Promise.resolve();\n  }\n\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction registerDefaultSw(_x21) {\n  return _registerDefaultSw.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction _registerDefaultSw() {\n  _registerDefaultSw = _asyncToGenerator(function* (messaging) {\n    try {\n      messaging.swRegistration = yield navigator.serviceWorker.register(DEFAULT_SW_PATH, {\n        scope: DEFAULT_SW_SCOPE\n      }); // The timing when browser updates sw when sw has an update is unreliable from experiment. It\n      // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\n      // is stuck with the old version. For example,\n      // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\n      // sw if there was an update.\n\n      messaging.swRegistration.update().catch(() => {\n        /* it is non blocking and we don't care if it failed */\n      });\n    } catch (e) {\n      throw ERROR_FACTORY.create(\"failed-service-worker-registration\"\n      /* FAILED_DEFAULT_REGISTRATION */\n      , {\n        browserErrorMessage: e.message\n      });\n    }\n  });\n  return _registerDefaultSw.apply(this, arguments);\n}\n\nfunction updateSwReg(_x22, _x23) {\n  return _updateSwReg.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction _updateSwReg() {\n  _updateSwReg = _asyncToGenerator(function* (messaging, swRegistration) {\n    if (!swRegistration && !messaging.swRegistration) {\n      yield registerDefaultSw(messaging);\n    }\n\n    if (!swRegistration && !!messaging.swRegistration) {\n      return;\n    }\n\n    if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n      throw ERROR_FACTORY.create(\"invalid-sw-registration\"\n      /* INVALID_SW_REGISTRATION */\n      );\n    }\n\n    messaging.swRegistration = swRegistration;\n  });\n  return _updateSwReg.apply(this, arguments);\n}\n\nfunction updateVapidKey(_x24, _x25) {\n  return _updateVapidKey.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction _updateVapidKey() {\n  _updateVapidKey = _asyncToGenerator(function* (messaging, vapidKey) {\n    if (!!vapidKey) {\n      messaging.vapidKey = vapidKey;\n    } else if (!messaging.vapidKey) {\n      messaging.vapidKey = DEFAULT_VAPID_KEY;\n    }\n  });\n  return _updateVapidKey.apply(this, arguments);\n}\n\nfunction getToken$1(_x26, _x27) {\n  return _getToken$.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction _getToken$() {\n  _getToken$ = _asyncToGenerator(function* (messaging, options) {\n    if (!navigator) {\n      throw ERROR_FACTORY.create(\"only-available-in-window\"\n      /* AVAILABLE_IN_WINDOW */\n      );\n    }\n\n    if (Notification.permission === 'default') {\n      yield Notification.requestPermission();\n    }\n\n    if (Notification.permission !== 'granted') {\n      throw ERROR_FACTORY.create(\"permission-blocked\"\n      /* PERMISSION_BLOCKED */\n      );\n    }\n\n    yield updateVapidKey(messaging, options === null || options === void 0 ? void 0 : options.vapidKey);\n    yield updateSwReg(messaging, options === null || options === void 0 ? void 0 : options.serviceWorkerRegistration);\n    return getTokenInternal(messaging);\n  });\n  return _getToken$.apply(this, arguments);\n}\n\nfunction logToScion(_x28, _x29, _x30) {\n  return _logToScion.apply(this, arguments);\n}\n\nfunction _logToScion() {\n  _logToScion = _asyncToGenerator(function* (messaging, messageType, data) {\n    const eventType = getEventType(messageType);\n    const analytics = yield messaging.firebaseDependencies.analyticsProvider.get();\n    analytics.logEvent(eventType, {\n      /* eslint-disable camelcase */\n      message_id: data[CONSOLE_CAMPAIGN_ID],\n      message_name: data[CONSOLE_CAMPAIGN_NAME],\n      message_time: data[CONSOLE_CAMPAIGN_TIME],\n      message_device_time: Math.floor(Date.now() / 1000)\n      /* eslint-enable camelcase */\n\n    });\n  });\n  return _logToScion.apply(this, arguments);\n}\n\nfunction getEventType(messageType) {\n  switch (messageType) {\n    case MessageType.NOTIFICATION_CLICKED:\n      return 'notification_open';\n\n    case MessageType.PUSH_RECEIVED:\n      return 'notification_foreground';\n\n    default:\n      throw new Error();\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction messageEventListener(_x31, _x32) {\n  return _messageEventListener.apply(this, arguments);\n}\n\nfunction _messageEventListener() {\n  _messageEventListener = _asyncToGenerator(function* (messaging, event) {\n    const internalPayload = event.data;\n\n    if (!internalPayload.isFirebaseMessaging) {\n      return;\n    }\n\n    if (messaging.onMessageHandler && internalPayload.messageType === MessageType.PUSH_RECEIVED) {\n      if (typeof messaging.onMessageHandler === 'function') {\n        messaging.onMessageHandler(externalizePayload(internalPayload));\n      } else {\n        messaging.onMessageHandler.next(externalizePayload(internalPayload));\n      }\n    } // Log to Scion if applicable\n\n\n    const dataPayload = internalPayload.data;\n\n    if (isConsoleMessage(dataPayload) && dataPayload[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1') {\n      yield logToScion(messaging, internalPayload.messageType, dataPayload);\n    }\n  });\n  return _messageEventListener.apply(this, arguments);\n}\n\nconst name = \"@firebase/messaging\";\nconst version = \"0.9.4\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nconst WindowMessagingFactory = container => {\n  const messaging = new MessagingService(container.getProvider('app').getImmediate(), container.getProvider('installations-internal').getImmediate(), container.getProvider('analytics-internal'));\n  navigator.serviceWorker.addEventListener('message', e => messageEventListener(messaging, e));\n  return messaging;\n};\n\nconst WindowMessagingInternalFactory = container => {\n  const messaging = container.getProvider('messaging').getImmediate();\n  const messagingInternal = {\n    getToken: options => getToken$1(messaging, options)\n  };\n  return messagingInternal;\n};\n\nfunction registerMessagingInWindow() {\n  _registerComponent(new Component('messaging', WindowMessagingFactory, \"PUBLIC\"\n  /* PUBLIC */\n  ));\n\n  _registerComponent(new Component('messaging-internal', WindowMessagingInternalFactory, \"PRIVATE\"\n  /* PRIVATE */\n  ));\n\n  registerVersion(name, version); // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n\n  registerVersion(name, version, 'esm2017');\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Checks if all required APIs exist in the browser.\r\n * @returns a Promise that resolves to a boolean.\r\n *\r\n * @public\r\n */\n\n\nfunction isWindowSupported() {\n  return _isWindowSupported.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction _isWindowSupported() {\n  _isWindowSupported = _asyncToGenerator(function* () {\n    // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n    // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n    // instantiating phase, informing the developers to import/call isSupported for special handling.\n    return typeof window !== 'undefined' && isIndexedDBAvailable() && (yield validateIndexedDBOpenable()) && areCookiesEnabled() && 'serviceWorker' in navigator && 'PushManager' in window && 'Notification' in window && 'fetch' in window && ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') && PushSubscription.prototype.hasOwnProperty('getKey');\n  });\n  return _isWindowSupported.apply(this, arguments);\n}\n\nfunction deleteToken$1(_x33) {\n  return _deleteToken$.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction _deleteToken$() {\n  _deleteToken$ = _asyncToGenerator(function* (messaging) {\n    if (!navigator) {\n      throw ERROR_FACTORY.create(\"only-available-in-window\"\n      /* AVAILABLE_IN_WINDOW */\n      );\n    }\n\n    if (!messaging.swRegistration) {\n      yield registerDefaultSw(messaging);\n    }\n\n    return deleteTokenInternal(messaging);\n  });\n  return _deleteToken$.apply(this, arguments);\n}\n\nfunction onMessage$1(messaging, nextOrObserver) {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(\"only-available-in-window\"\n    /* AVAILABLE_IN_WINDOW */\n    );\n  }\n\n  messaging.onMessageHandler = nextOrObserver;\n  return () => {\n    messaging.onMessageHandler = null;\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Retrieves a Firebase Cloud Messaging instance.\r\n *\r\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\r\n *\r\n * @public\r\n */\n\n\nfunction getMessagingInWindow(app = getApp()) {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isWindowSupported().then(isSupported => {\n    // If `isWindowSupported()` resolved, but returned false.\n    if (!isSupported) {\n      throw ERROR_FACTORY.create(\"unsupported-browser\"\n      /* UNSUPPORTED_BROWSER */\n      );\n    }\n  }, _ => {\n    // If `isWindowSupported()` rejected.\n    throw ERROR_FACTORY.create(\"indexed-db-unsupported\"\n    /* INDEXED_DB_UNSUPPORTED */\n    );\n  });\n  return _getProvider(getModularInstance(app), 'messaging').getImmediate();\n}\n/**\r\n * Subscribes the {@link Messaging} instance to push notifications. Returns an Firebase Cloud\r\n * Messaging registration token that can be used to send push messages to that {@link Messaging}\r\n * instance.\r\n *\r\n * If a notification permission isn't already granted, this method asks the user for permission. The\r\n * returned promise rejects if the user does not allow the app to show notifications.\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n * @param options - Provides an optional vapid key and an optinoal service worker registration\r\n *\r\n * @returns The promise resolves with an FCM registration token.\r\n *\r\n * @public\r\n */\n\n\nfunction getToken(_x34, _x35) {\n  return _getToken.apply(this, arguments);\n}\n/**\r\n * Deletes the registration token associated with this {@link Messaging} instance and unsubscribes\r\n * the {@link Messaging} instance from the push subscription.\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n *\r\n * @returns The promise resolves when the token has been successfully deleted.\r\n *\r\n * @public\r\n */\n\n\nfunction _getToken() {\n  _getToken = _asyncToGenerator(function* (messaging, options) {\n    messaging = getModularInstance(messaging);\n    return getToken$1(messaging, options);\n  });\n  return _getToken.apply(this, arguments);\n}\n\nfunction deleteToken(messaging) {\n  messaging = getModularInstance(messaging);\n  return deleteToken$1(messaging);\n}\n/**\r\n * When a push message is received and the user is currently on a page for your origin, the\r\n * message is passed to the page and an `onMessage()` event is dispatched with the payload of\r\n * the push message.\r\n *\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n * @param nextOrObserver - This function, or observer object with `next` defined,\r\n *     is called when a message is received and the user is currently viewing your page.\r\n * @returns To stop listening for messages execute this returned function.\r\n *\r\n * @public\r\n */\n\n\nfunction onMessage(messaging, nextOrObserver) {\n  messaging = getModularInstance(messaging);\n  return onMessage$1(messaging, nextOrObserver);\n}\n/**\r\n * Firebase Cloud Messaging\r\n *\r\n * @packageDocumentation\r\n */\n\n\nregisterMessagingInWindow();\nexport { deleteToken, getMessagingInWindow as getMessaging, getToken, isWindowSupported as isSupported, onMessage };","map":{"version":3,"sources":["C:/cursos_Udemy/Angular/listado-personas/node_modules/@firebase/messaging/dist/esm/index.esm2017.js"],"names":["Component","openDb","deleteDb","ErrorFactory","isIndexedDBAvailable","validateIndexedDBOpenable","areCookiesEnabled","getModularInstance","_registerComponent","registerVersion","getApp","_getProvider","DEFAULT_SW_PATH","DEFAULT_SW_SCOPE","DEFAULT_VAPID_KEY","ENDPOINT","CONSOLE_CAMPAIGN_ID","CONSOLE_CAMPAIGN_NAME","CONSOLE_CAMPAIGN_TIME","CONSOLE_CAMPAIGN_ANALYTICS_ENABLED","MessageType$1","MessageType","arrayToBase64","array","uint8Array","Uint8Array","base64String","btoa","String","fromCharCode","replace","base64ToArray","padding","repeat","length","base64","rawData","atob","outputArray","i","charCodeAt","OLD_DB_NAME","OLD_DB_VERSION","OLD_OBJECT_STORE_NAME","migrateOldDatabase","senderId","indexedDB","databases","dbNames","map","db","name","includes","tokenDetails","_a","oldVersion","objectStoreNames","contains","objectStore","transaction","value","index","get","clear","oldDetails","auth","p256dh","endpoint","token","fcmToken","createTime","Date","now","subscriptionOptions","swScope","vapidKey","close","checkTokenDetails","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","getDbPromise","upgradeDb","createObjectStore","dbGet","firebaseDependencies","key","getKey","oldTokenDetails","appConfig","dbSet","tx","put","complete","dbRemove","delete","appId","ERROR_MAP","ERROR_FACTORY","requestGetToken","headers","getHeaders","body","getBody","subscribeOptions","method","JSON","stringify","responseData","response","fetch","getEndpoint","json","err","create","errorInfo","error","message","requestUpdateToken","updateOptions","requestDeleteToken","unsubscribeOptions","projectId","installations","authToken","getToken","Headers","Accept","apiKey","web","applicationPubKey","TOKEN_EXPIRATION_MS","getTokenInternal","messaging","pushSubscription","getPushSubscription","swRegistration","scope","getNewToken","isTokenValid","e","console","warn","updateToken","deleteTokenInternal","pushManager","getSubscription","unsubscribe","updatedToken","updatedTokenDetails","Object","assign","subscription","subscribe","userVisibleOnly","applicationServerKey","dbOptions","currentOptions","isVapidKeyEqual","isEndpointEqual","isAuthEqual","isP256dhEqual","externalizePayload","internalPayload","payload","from","collapseKey","collapse_key","messageId","fcm_message_id","propagateNotificationPayload","propagateDataPayload","propagateFcmOptions","messagePayloadInternal","notification","title","image","data","fcmOptions","link","analyticsLabel","analytics_label","isConsoleMessage","_mergeStrings","s1","s2","resultArray","push","charAt","join","extractAppConfig","app","options","getMissingValueError","configKeys","keyName","appName","messagingSenderId","valueName","MessagingService","constructor","analyticsProvider","deliveryMetricsExportedToBigQueryEnabled","onBackgroundMessageHandler","onMessageHandler","logEvents","isLogServiceStarted","_delete","Promise","resolve","registerDefaultSw","navigator","serviceWorker","register","update","catch","browserErrorMessage","updateSwReg","ServiceWorkerRegistration","updateVapidKey","getToken$1","Notification","permission","requestPermission","serviceWorkerRegistration","logToScion","messageType","eventType","getEventType","analytics","logEvent","message_id","message_name","message_time","message_device_time","Math","floor","NOTIFICATION_CLICKED","PUSH_RECEIVED","Error","messageEventListener","event","isFirebaseMessaging","next","dataPayload","version","WindowMessagingFactory","container","getProvider","getImmediate","addEventListener","WindowMessagingInternalFactory","messagingInternal","registerMessagingInWindow","isWindowSupported","window","prototype","hasOwnProperty","PushSubscription","deleteToken$1","onMessage$1","nextOrObserver","getMessagingInWindow","then","isSupported","_","deleteToken","onMessage","getMessaging"],"mappings":"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","sourcesContent":["import '@firebase/installations';\nimport { Component } from '@firebase/component';\nimport { openDb, deleteDb } from 'idb';\nimport { ErrorFactory, isIndexedDBAvailable, validateIndexedDBOpenable, areCookiesEnabled, getModularInstance } from '@firebase/util';\nimport { _registerComponent, registerVersion, getApp, _getProvider } from '@firebase/app';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\r\nconst DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\r\nconst DEFAULT_VAPID_KEY = 'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\r\nconst ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\r\nconst CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\r\nconst CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\r\nconst CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\r\n/** Set to '1' if Analytics is enabled for the campaign */\r\nconst CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\r\nvar MessageType$1;\r\n(function (MessageType) {\r\n    MessageType[MessageType[\"DATA_MESSAGE\"] = 1] = \"DATA_MESSAGE\";\r\n    MessageType[MessageType[\"DISPLAY_NOTIFICATION\"] = 3] = \"DISPLAY_NOTIFICATION\";\r\n})(MessageType$1 || (MessageType$1 = {}));\n\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\r\n * in compliance with the License. You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n * or implied. See the License for the specific language governing permissions and limitations under\r\n * the License.\r\n */\r\nvar MessageType;\r\n(function (MessageType) {\r\n    MessageType[\"PUSH_RECEIVED\"] = \"push-received\";\r\n    MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\r\n})(MessageType || (MessageType = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction arrayToBase64(array) {\r\n    const uint8Array = new Uint8Array(array);\r\n    const base64String = btoa(String.fromCharCode(...uint8Array));\r\n    return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\r\n}\r\nfunction base64ToArray(base64String) {\r\n    const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\r\n    const base64 = (base64String + padding)\r\n        .replace(/\\-/g, '+')\r\n        .replace(/_/g, '/');\r\n    const rawData = atob(base64);\r\n    const outputArray = new Uint8Array(rawData.length);\r\n    for (let i = 0; i < rawData.length; ++i) {\r\n        outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst OLD_DB_NAME = 'fcm_token_details_db';\r\n/**\r\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\r\n * callback is called for all versions of the old DB.\r\n */\r\nconst OLD_DB_VERSION = 5;\r\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\r\nasync function migrateOldDatabase(senderId) {\r\n    if ('databases' in indexedDB) {\r\n        // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\r\n        // typecast when it lands in TS types.\r\n        const databases = await indexedDB.databases();\r\n        const dbNames = databases.map(db => db.name);\r\n        if (!dbNames.includes(OLD_DB_NAME)) {\r\n            // old DB didn't exist, no need to open.\r\n            return null;\r\n        }\r\n    }\r\n    let tokenDetails = null;\r\n    const db = await openDb(OLD_DB_NAME, OLD_DB_VERSION, async (db) => {\r\n        var _a;\r\n        if (db.oldVersion < 2) {\r\n            // Database too old, skip migration.\r\n            return;\r\n        }\r\n        if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\r\n            // Database did not exist. Nothing to do.\r\n            return;\r\n        }\r\n        const objectStore = db.transaction.objectStore(OLD_OBJECT_STORE_NAME);\r\n        const value = await objectStore.index('fcmSenderId').get(senderId);\r\n        await objectStore.clear();\r\n        if (!value) {\r\n            // No entry in the database, nothing to migrate.\r\n            return;\r\n        }\r\n        if (db.oldVersion === 2) {\r\n            const oldDetails = value;\r\n            if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\r\n                return;\r\n            }\r\n            tokenDetails = {\r\n                token: oldDetails.fcmToken,\r\n                createTime: (_a = oldDetails.createTime) !== null && _a !== void 0 ? _a : Date.now(),\r\n                subscriptionOptions: {\r\n                    auth: oldDetails.auth,\r\n                    p256dh: oldDetails.p256dh,\r\n                    endpoint: oldDetails.endpoint,\r\n                    swScope: oldDetails.swScope,\r\n                    vapidKey: typeof oldDetails.vapidKey === 'string'\r\n                        ? oldDetails.vapidKey\r\n                        : arrayToBase64(oldDetails.vapidKey)\r\n                }\r\n            };\r\n        }\r\n        else if (db.oldVersion === 3) {\r\n            const oldDetails = value;\r\n            tokenDetails = {\r\n                token: oldDetails.fcmToken,\r\n                createTime: oldDetails.createTime,\r\n                subscriptionOptions: {\r\n                    auth: arrayToBase64(oldDetails.auth),\r\n                    p256dh: arrayToBase64(oldDetails.p256dh),\r\n                    endpoint: oldDetails.endpoint,\r\n                    swScope: oldDetails.swScope,\r\n                    vapidKey: arrayToBase64(oldDetails.vapidKey)\r\n                }\r\n            };\r\n        }\r\n        else if (db.oldVersion === 4) {\r\n            const oldDetails = value;\r\n            tokenDetails = {\r\n                token: oldDetails.fcmToken,\r\n                createTime: oldDetails.createTime,\r\n                subscriptionOptions: {\r\n                    auth: arrayToBase64(oldDetails.auth),\r\n                    p256dh: arrayToBase64(oldDetails.p256dh),\r\n                    endpoint: oldDetails.endpoint,\r\n                    swScope: oldDetails.swScope,\r\n                    vapidKey: arrayToBase64(oldDetails.vapidKey)\r\n                }\r\n            };\r\n        }\r\n    });\r\n    db.close();\r\n    // Delete all old databases.\r\n    await deleteDb(OLD_DB_NAME);\r\n    await deleteDb('fcm_vapid_details_db');\r\n    await deleteDb('undefined');\r\n    return checkTokenDetails(tokenDetails) ? tokenDetails : null;\r\n}\r\nfunction checkTokenDetails(tokenDetails) {\r\n    if (!tokenDetails || !tokenDetails.subscriptionOptions) {\r\n        return false;\r\n    }\r\n    const { subscriptionOptions } = tokenDetails;\r\n    return (typeof tokenDetails.createTime === 'number' &&\r\n        tokenDetails.createTime > 0 &&\r\n        typeof tokenDetails.token === 'string' &&\r\n        tokenDetails.token.length > 0 &&\r\n        typeof subscriptionOptions.auth === 'string' &&\r\n        subscriptionOptions.auth.length > 0 &&\r\n        typeof subscriptionOptions.p256dh === 'string' &&\r\n        subscriptionOptions.p256dh.length > 0 &&\r\n        typeof subscriptionOptions.endpoint === 'string' &&\r\n        subscriptionOptions.endpoint.length > 0 &&\r\n        typeof subscriptionOptions.swScope === 'string' &&\r\n        subscriptionOptions.swScope.length > 0 &&\r\n        typeof subscriptionOptions.vapidKey === 'string' &&\r\n        subscriptionOptions.vapidKey.length > 0);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Exported for tests.\r\nconst DATABASE_NAME = 'firebase-messaging-database';\r\nconst DATABASE_VERSION = 1;\r\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDb => {\r\n            // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\r\n            // because if there are multiple versions between the old version and the current version, we\r\n            // want ALL the migrations that correspond to those versions to run, not only the last one.\r\n            // eslint-disable-next-line default-case\r\n            switch (upgradeDb.oldVersion) {\r\n                case 0:\r\n                    upgradeDb.createObjectStore(OBJECT_STORE_NAME);\r\n            }\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\n/** Gets record(s) from the objectStore that match the given key. */\r\nasync function dbGet(firebaseDependencies) {\r\n    const key = getKey(firebaseDependencies);\r\n    const db = await getDbPromise();\r\n    const tokenDetails = await db\r\n        .transaction(OBJECT_STORE_NAME)\r\n        .objectStore(OBJECT_STORE_NAME)\r\n        .get(key);\r\n    if (tokenDetails) {\r\n        return tokenDetails;\r\n    }\r\n    else {\r\n        // Check if there is a tokenDetails object in the old DB.\r\n        const oldTokenDetails = await migrateOldDatabase(firebaseDependencies.appConfig.senderId);\r\n        if (oldTokenDetails) {\r\n            await dbSet(firebaseDependencies, oldTokenDetails);\r\n            return oldTokenDetails;\r\n        }\r\n    }\r\n}\r\n/** Assigns or overwrites the record for the given key with the given value. */\r\nasync function dbSet(firebaseDependencies, tokenDetails) {\r\n    const key = getKey(firebaseDependencies);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\r\n    await tx.complete;\r\n    return tokenDetails;\r\n}\r\n/** Removes record(s) from the objectStore that match the given key. */\r\nasync function dbRemove(firebaseDependencies) {\r\n    const key = getKey(firebaseDependencies);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    await tx.objectStore(OBJECT_STORE_NAME).delete(key);\r\n    await tx.complete;\r\n}\r\nfunction getKey({ appConfig }) {\r\n    return appConfig.appId;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERROR_MAP = {\r\n    [\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */]: 'Missing App configuration value: \"{$valueName}\"',\r\n    [\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */]: 'This method is available in a Window context.',\r\n    [\"only-available-in-sw\" /* AVAILABLE_IN_SW */]: 'This method is available in a service worker context.',\r\n    [\"permission-default\" /* PERMISSION_DEFAULT */]: 'The notification permission was not granted and dismissed instead.',\r\n    [\"permission-blocked\" /* PERMISSION_BLOCKED */]: 'The notification permission was not granted and blocked instead.',\r\n    [\"unsupported-browser\" /* UNSUPPORTED_BROWSER */]: \"This browser doesn't support the API's required to use the Firebase SDK.\",\r\n    [\"indexed-db-unsupported\" /* INDEXED_DB_UNSUPPORTED */]: \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\",\r\n    [\"failed-service-worker-registration\" /* FAILED_DEFAULT_REGISTRATION */]: 'We are unable to register the default service worker. {$browserErrorMessage}',\r\n    [\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */]: 'A problem occurred while subscribing the user to FCM: {$errorInfo}',\r\n    [\"token-subscribe-no-token\" /* TOKEN_SUBSCRIBE_NO_TOKEN */]: 'FCM returned no token when subscribing the user to push.',\r\n    [\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */]: 'A problem occurred while unsubscribing the ' +\r\n        'user from FCM: {$errorInfo}',\r\n    [\"token-update-failed\" /* TOKEN_UPDATE_FAILED */]: 'A problem occurred while updating the user from FCM: {$errorInfo}',\r\n    [\"token-update-no-token\" /* TOKEN_UPDATE_NO_TOKEN */]: 'FCM returned no token when updating the user to push.',\r\n    [\"use-sw-after-get-token\" /* USE_SW_AFTER_GET_TOKEN */]: 'The useServiceWorker() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your service worker is used.',\r\n    [\"invalid-sw-registration\" /* INVALID_SW_REGISTRATION */]: 'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\r\n    [\"invalid-bg-handler\" /* INVALID_BG_HANDLER */]: 'The input to setBackgroundMessageHandler() must be a function.',\r\n    [\"invalid-vapid-key\" /* INVALID_VAPID_KEY */]: 'The public VAPID key must be a string.',\r\n    [\"use-vapid-key-after-get-token\" /* USE_VAPID_KEY_AFTER_GET_TOKEN */]: 'The usePublicVapidKey() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your VAPID key is used.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function requestGetToken(firebaseDependencies, subscriptionOptions) {\r\n    const headers = await getHeaders(firebaseDependencies);\r\n    const body = getBody(subscriptionOptions);\r\n    const subscribeOptions = {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify(body)\r\n    };\r\n    let responseData;\r\n    try {\r\n        const response = await fetch(getEndpoint(firebaseDependencies.appConfig), subscribeOptions);\r\n        responseData = await response.json();\r\n    }\r\n    catch (err) {\r\n        throw ERROR_FACTORY.create(\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */, {\r\n            errorInfo: err\r\n        });\r\n    }\r\n    if (responseData.error) {\r\n        const message = responseData.error.message;\r\n        throw ERROR_FACTORY.create(\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */, {\r\n            errorInfo: message\r\n        });\r\n    }\r\n    if (!responseData.token) {\r\n        throw ERROR_FACTORY.create(\"token-subscribe-no-token\" /* TOKEN_SUBSCRIBE_NO_TOKEN */);\r\n    }\r\n    return responseData.token;\r\n}\r\nasync function requestUpdateToken(firebaseDependencies, tokenDetails) {\r\n    const headers = await getHeaders(firebaseDependencies);\r\n    const body = getBody(tokenDetails.subscriptionOptions);\r\n    const updateOptions = {\r\n        method: 'PATCH',\r\n        headers,\r\n        body: JSON.stringify(body)\r\n    };\r\n    let responseData;\r\n    try {\r\n        const response = await fetch(`${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`, updateOptions);\r\n        responseData = await response.json();\r\n    }\r\n    catch (err) {\r\n        throw ERROR_FACTORY.create(\"token-update-failed\" /* TOKEN_UPDATE_FAILED */, {\r\n            errorInfo: err\r\n        });\r\n    }\r\n    if (responseData.error) {\r\n        const message = responseData.error.message;\r\n        throw ERROR_FACTORY.create(\"token-update-failed\" /* TOKEN_UPDATE_FAILED */, {\r\n            errorInfo: message\r\n        });\r\n    }\r\n    if (!responseData.token) {\r\n        throw ERROR_FACTORY.create(\"token-update-no-token\" /* TOKEN_UPDATE_NO_TOKEN */);\r\n    }\r\n    return responseData.token;\r\n}\r\nasync function requestDeleteToken(firebaseDependencies, token) {\r\n    const headers = await getHeaders(firebaseDependencies);\r\n    const unsubscribeOptions = {\r\n        method: 'DELETE',\r\n        headers\r\n    };\r\n    try {\r\n        const response = await fetch(`${getEndpoint(firebaseDependencies.appConfig)}/${token}`, unsubscribeOptions);\r\n        const responseData = await response.json();\r\n        if (responseData.error) {\r\n            const message = responseData.error.message;\r\n            throw ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */, {\r\n                errorInfo: message\r\n            });\r\n        }\r\n    }\r\n    catch (err) {\r\n        throw ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */, {\r\n            errorInfo: err\r\n        });\r\n    }\r\n}\r\nfunction getEndpoint({ projectId }) {\r\n    return `${ENDPOINT}/projects/${projectId}/registrations`;\r\n}\r\nasync function getHeaders({ appConfig, installations }) {\r\n    const authToken = await installations.getToken();\r\n    return new Headers({\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'x-goog-api-key': appConfig.apiKey,\r\n        'x-goog-firebase-installations-auth': `FIS ${authToken}`\r\n    });\r\n}\r\nfunction getBody({ p256dh, auth, endpoint, vapidKey }) {\r\n    const body = {\r\n        web: {\r\n            endpoint,\r\n            auth,\r\n            p256dh\r\n        }\r\n    };\r\n    if (vapidKey !== DEFAULT_VAPID_KEY) {\r\n        body.web.applicationPubKey = vapidKey;\r\n    }\r\n    return body;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// UpdateRegistration will be called once every week.\r\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\r\nasync function getTokenInternal(messaging) {\r\n    const pushSubscription = await getPushSubscription(messaging.swRegistration, messaging.vapidKey);\r\n    const subscriptionOptions = {\r\n        vapidKey: messaging.vapidKey,\r\n        swScope: messaging.swRegistration.scope,\r\n        endpoint: pushSubscription.endpoint,\r\n        auth: arrayToBase64(pushSubscription.getKey('auth')),\r\n        p256dh: arrayToBase64(pushSubscription.getKey('p256dh'))\r\n    };\r\n    const tokenDetails = await dbGet(messaging.firebaseDependencies);\r\n    if (!tokenDetails) {\r\n        // No token, get a new one.\r\n        return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\r\n    }\r\n    else if (!isTokenValid(tokenDetails.subscriptionOptions, subscriptionOptions)) {\r\n        // Invalid token, get a new one.\r\n        try {\r\n            await requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\r\n        }\r\n        catch (e) {\r\n            // Suppress errors because of #2364\r\n            console.warn(e);\r\n        }\r\n        return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\r\n    }\r\n    else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\r\n        // Weekly token refresh\r\n        return updateToken(messaging, {\r\n            token: tokenDetails.token,\r\n            createTime: Date.now(),\r\n            subscriptionOptions\r\n        });\r\n    }\r\n    else {\r\n        // Valid token, nothing to do.\r\n        return tokenDetails.token;\r\n    }\r\n}\r\n/**\r\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\r\n * the push subscription if it exists.\r\n */\r\nasync function deleteTokenInternal(messaging) {\r\n    const tokenDetails = await dbGet(messaging.firebaseDependencies);\r\n    if (tokenDetails) {\r\n        await requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\r\n        await dbRemove(messaging.firebaseDependencies);\r\n    }\r\n    // Unsubscribe from the push subscription.\r\n    const pushSubscription = await messaging.swRegistration.pushManager.getSubscription();\r\n    if (pushSubscription) {\r\n        return pushSubscription.unsubscribe();\r\n    }\r\n    // If there's no SW, consider it a success.\r\n    return true;\r\n}\r\nasync function updateToken(messaging, tokenDetails) {\r\n    try {\r\n        const updatedToken = await requestUpdateToken(messaging.firebaseDependencies, tokenDetails);\r\n        const updatedTokenDetails = Object.assign(Object.assign({}, tokenDetails), { token: updatedToken, createTime: Date.now() });\r\n        await dbSet(messaging.firebaseDependencies, updatedTokenDetails);\r\n        return updatedToken;\r\n    }\r\n    catch (e) {\r\n        await deleteTokenInternal(messaging);\r\n        throw e;\r\n    }\r\n}\r\nasync function getNewToken(firebaseDependencies, subscriptionOptions) {\r\n    const token = await requestGetToken(firebaseDependencies, subscriptionOptions);\r\n    const tokenDetails = {\r\n        token,\r\n        createTime: Date.now(),\r\n        subscriptionOptions\r\n    };\r\n    await dbSet(firebaseDependencies, tokenDetails);\r\n    return tokenDetails.token;\r\n}\r\n/**\r\n * Gets a PushSubscription for the current user.\r\n */\r\nasync function getPushSubscription(swRegistration, vapidKey) {\r\n    const subscription = await swRegistration.pushManager.getSubscription();\r\n    if (subscription) {\r\n        return subscription;\r\n    }\r\n    return swRegistration.pushManager.subscribe({\r\n        userVisibleOnly: true,\r\n        // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\r\n        // submitted to pushManager#subscribe must be of type Uint8Array.\r\n        applicationServerKey: base64ToArray(vapidKey)\r\n    });\r\n}\r\n/**\r\n * Checks if the saved tokenDetails object matches the configuration provided.\r\n */\r\nfunction isTokenValid(dbOptions, currentOptions) {\r\n    const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\r\n    const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\r\n    const isAuthEqual = currentOptions.auth === dbOptions.auth;\r\n    const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\r\n    return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction externalizePayload(internalPayload) {\r\n    const payload = {\r\n        from: internalPayload.from,\r\n        // eslint-disable-next-line camelcase\r\n        collapseKey: internalPayload.collapse_key,\r\n        // eslint-disable-next-line camelcase\r\n        messageId: internalPayload.fcm_message_id\r\n    };\r\n    propagateNotificationPayload(payload, internalPayload);\r\n    propagateDataPayload(payload, internalPayload);\r\n    propagateFcmOptions(payload, internalPayload);\r\n    return payload;\r\n}\r\nfunction propagateNotificationPayload(payload, messagePayloadInternal) {\r\n    if (!messagePayloadInternal.notification) {\r\n        return;\r\n    }\r\n    payload.notification = {};\r\n    const title = messagePayloadInternal.notification.title;\r\n    if (!!title) {\r\n        payload.notification.title = title;\r\n    }\r\n    const body = messagePayloadInternal.notification.body;\r\n    if (!!body) {\r\n        payload.notification.body = body;\r\n    }\r\n    const image = messagePayloadInternal.notification.image;\r\n    if (!!image) {\r\n        payload.notification.image = image;\r\n    }\r\n}\r\nfunction propagateDataPayload(payload, messagePayloadInternal) {\r\n    if (!messagePayloadInternal.data) {\r\n        return;\r\n    }\r\n    payload.data = messagePayloadInternal.data;\r\n}\r\nfunction propagateFcmOptions(payload, messagePayloadInternal) {\r\n    if (!messagePayloadInternal.fcmOptions) {\r\n        return;\r\n    }\r\n    payload.fcmOptions = {};\r\n    const link = messagePayloadInternal.fcmOptions.link;\r\n    if (!!link) {\r\n        payload.fcmOptions.link = link;\r\n    }\r\n    // eslint-disable-next-line camelcase\r\n    const analyticsLabel = messagePayloadInternal.fcmOptions.analytics_label;\r\n    if (!!analyticsLabel) {\r\n        payload.fcmOptions.analyticsLabel = analyticsLabel;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isConsoleMessage(data) {\r\n    // This message has a campaign ID, meaning it was sent using the Firebase Console.\r\n    return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n_mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\r\n_mergeStrings('AzSCbw63g1R0nCw85jG8', 'Iaya3yLKwmgvh7cF0q4');\r\nfunction _mergeStrings(s1, s2) {\r\n    const resultArray = [];\r\n    for (let i = 0; i < s1.length; i++) {\r\n        resultArray.push(s1.charAt(i));\r\n        if (i < s2.length) {\r\n            resultArray.push(s2.charAt(i));\r\n        }\r\n    }\r\n    return resultArray.join('');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction extractAppConfig(app) {\r\n    if (!app || !app.options) {\r\n        throw getMissingValueError('App Configuration Object');\r\n    }\r\n    if (!app.name) {\r\n        throw getMissingValueError('App Name');\r\n    }\r\n    // Required app config keys\r\n    const configKeys = [\r\n        'projectId',\r\n        'apiKey',\r\n        'appId',\r\n        'messagingSenderId'\r\n    ];\r\n    const { options } = app;\r\n    for (const keyName of configKeys) {\r\n        if (!options[keyName]) {\r\n            throw getMissingValueError(keyName);\r\n        }\r\n    }\r\n    return {\r\n        appName: app.name,\r\n        projectId: options.projectId,\r\n        apiKey: options.apiKey,\r\n        appId: options.appId,\r\n        senderId: options.messagingSenderId\r\n    };\r\n}\r\nfunction getMissingValueError(valueName) {\r\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */, {\r\n        valueName\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass MessagingService {\r\n    constructor(app, installations, analyticsProvider) {\r\n        // logging is only done with end user consent. Default to false.\r\n        this.deliveryMetricsExportedToBigQueryEnabled = false;\r\n        this.onBackgroundMessageHandler = null;\r\n        this.onMessageHandler = null;\r\n        this.logEvents = [];\r\n        this.isLogServiceStarted = false;\r\n        const appConfig = extractAppConfig(app);\r\n        this.firebaseDependencies = {\r\n            app,\r\n            appConfig,\r\n            installations,\r\n            analyticsProvider\r\n        };\r\n    }\r\n    _delete() {\r\n        return Promise.resolve();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function registerDefaultSw(messaging) {\r\n    try {\r\n        messaging.swRegistration = await navigator.serviceWorker.register(DEFAULT_SW_PATH, {\r\n            scope: DEFAULT_SW_SCOPE\r\n        });\r\n        // The timing when browser updates sw when sw has an update is unreliable from experiment. It\r\n        // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\r\n        // is stuck with the old version. For example,\r\n        // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\r\n        // sw if there was an update.\r\n        messaging.swRegistration.update().catch(() => {\r\n            /* it is non blocking and we don't care if it failed */\r\n        });\r\n    }\r\n    catch (e) {\r\n        throw ERROR_FACTORY.create(\"failed-service-worker-registration\" /* FAILED_DEFAULT_REGISTRATION */, {\r\n            browserErrorMessage: e.message\r\n        });\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function updateSwReg(messaging, swRegistration) {\r\n    if (!swRegistration && !messaging.swRegistration) {\r\n        await registerDefaultSw(messaging);\r\n    }\r\n    if (!swRegistration && !!messaging.swRegistration) {\r\n        return;\r\n    }\r\n    if (!(swRegistration instanceof ServiceWorkerRegistration)) {\r\n        throw ERROR_FACTORY.create(\"invalid-sw-registration\" /* INVALID_SW_REGISTRATION */);\r\n    }\r\n    messaging.swRegistration = swRegistration;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function updateVapidKey(messaging, vapidKey) {\r\n    if (!!vapidKey) {\r\n        messaging.vapidKey = vapidKey;\r\n    }\r\n    else if (!messaging.vapidKey) {\r\n        messaging.vapidKey = DEFAULT_VAPID_KEY;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function getToken$1(messaging, options) {\r\n    if (!navigator) {\r\n        throw ERROR_FACTORY.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    }\r\n    if (Notification.permission === 'default') {\r\n        await Notification.requestPermission();\r\n    }\r\n    if (Notification.permission !== 'granted') {\r\n        throw ERROR_FACTORY.create(\"permission-blocked\" /* PERMISSION_BLOCKED */);\r\n    }\r\n    await updateVapidKey(messaging, options === null || options === void 0 ? void 0 : options.vapidKey);\r\n    await updateSwReg(messaging, options === null || options === void 0 ? void 0 : options.serviceWorkerRegistration);\r\n    return getTokenInternal(messaging);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function logToScion(messaging, messageType, data) {\r\n    const eventType = getEventType(messageType);\r\n    const analytics = await messaging.firebaseDependencies.analyticsProvider.get();\r\n    analytics.logEvent(eventType, {\r\n        /* eslint-disable camelcase */\r\n        message_id: data[CONSOLE_CAMPAIGN_ID],\r\n        message_name: data[CONSOLE_CAMPAIGN_NAME],\r\n        message_time: data[CONSOLE_CAMPAIGN_TIME],\r\n        message_device_time: Math.floor(Date.now() / 1000)\r\n        /* eslint-enable camelcase */\r\n    });\r\n}\r\nfunction getEventType(messageType) {\r\n    switch (messageType) {\r\n        case MessageType.NOTIFICATION_CLICKED:\r\n            return 'notification_open';\r\n        case MessageType.PUSH_RECEIVED:\r\n            return 'notification_foreground';\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function messageEventListener(messaging, event) {\r\n    const internalPayload = event.data;\r\n    if (!internalPayload.isFirebaseMessaging) {\r\n        return;\r\n    }\r\n    if (messaging.onMessageHandler &&\r\n        internalPayload.messageType === MessageType.PUSH_RECEIVED) {\r\n        if (typeof messaging.onMessageHandler === 'function') {\r\n            messaging.onMessageHandler(externalizePayload(internalPayload));\r\n        }\r\n        else {\r\n            messaging.onMessageHandler.next(externalizePayload(internalPayload));\r\n        }\r\n    }\r\n    // Log to Scion if applicable\r\n    const dataPayload = internalPayload.data;\r\n    if (isConsoleMessage(dataPayload) &&\r\n        dataPayload[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1') {\r\n        await logToScion(messaging, internalPayload.messageType, dataPayload);\r\n    }\r\n}\n\nconst name = \"@firebase/messaging\";\nconst version = \"0.9.4\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst WindowMessagingFactory = (container) => {\r\n    const messaging = new MessagingService(container.getProvider('app').getImmediate(), container.getProvider('installations-internal').getImmediate(), container.getProvider('analytics-internal'));\r\n    navigator.serviceWorker.addEventListener('message', e => messageEventListener(messaging, e));\r\n    return messaging;\r\n};\r\nconst WindowMessagingInternalFactory = (container) => {\r\n    const messaging = container\r\n        .getProvider('messaging')\r\n        .getImmediate();\r\n    const messagingInternal = {\r\n        getToken: (options) => getToken$1(messaging, options)\r\n    };\r\n    return messagingInternal;\r\n};\r\nfunction registerMessagingInWindow() {\r\n    _registerComponent(new Component('messaging', WindowMessagingFactory, \"PUBLIC\" /* PUBLIC */));\r\n    _registerComponent(new Component('messaging-internal', WindowMessagingInternalFactory, \"PRIVATE\" /* PRIVATE */));\r\n    registerVersion(name, version);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name, version, 'esm2017');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Checks if all required APIs exist in the browser.\r\n * @returns a Promise that resolves to a boolean.\r\n *\r\n * @public\r\n */\r\nasync function isWindowSupported() {\r\n    // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\r\n    // might be prohibited to run. In these contexts, an error would be thrown during the messaging\r\n    // instantiating phase, informing the developers to import/call isSupported for special handling.\r\n    return (typeof window !== 'undefined' &&\r\n        isIndexedDBAvailable() &&\r\n        (await validateIndexedDBOpenable()) &&\r\n        areCookiesEnabled() &&\r\n        'serviceWorker' in navigator &&\r\n        'PushManager' in window &&\r\n        'Notification' in window &&\r\n        'fetch' in window &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function deleteToken$1(messaging) {\r\n    if (!navigator) {\r\n        throw ERROR_FACTORY.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    }\r\n    if (!messaging.swRegistration) {\r\n        await registerDefaultSw(messaging);\r\n    }\r\n    return deleteTokenInternal(messaging);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction onMessage$1(messaging, nextOrObserver) {\r\n    if (!navigator) {\r\n        throw ERROR_FACTORY.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    }\r\n    messaging.onMessageHandler = nextOrObserver;\r\n    return () => {\r\n        messaging.onMessageHandler = null;\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Retrieves a Firebase Cloud Messaging instance.\r\n *\r\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\r\n *\r\n * @public\r\n */\r\nfunction getMessagingInWindow(app = getApp()) {\r\n    // Conscious decision to make this async check non-blocking during the messaging instance\r\n    // initialization phase for performance consideration. An error would be thrown latter for\r\n    // developer's information. Developers can then choose to import and call `isSupported` for\r\n    // special handling.\r\n    isWindowSupported().then(isSupported => {\r\n        // If `isWindowSupported()` resolved, but returned false.\r\n        if (!isSupported) {\r\n            throw ERROR_FACTORY.create(\"unsupported-browser\" /* UNSUPPORTED_BROWSER */);\r\n        }\r\n    }, _ => {\r\n        // If `isWindowSupported()` rejected.\r\n        throw ERROR_FACTORY.create(\"indexed-db-unsupported\" /* INDEXED_DB_UNSUPPORTED */);\r\n    });\r\n    return _getProvider(getModularInstance(app), 'messaging').getImmediate();\r\n}\r\n/**\r\n * Subscribes the {@link Messaging} instance to push notifications. Returns an Firebase Cloud\r\n * Messaging registration token that can be used to send push messages to that {@link Messaging}\r\n * instance.\r\n *\r\n * If a notification permission isn't already granted, this method asks the user for permission. The\r\n * returned promise rejects if the user does not allow the app to show notifications.\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n * @param options - Provides an optional vapid key and an optinoal service worker registration\r\n *\r\n * @returns The promise resolves with an FCM registration token.\r\n *\r\n * @public\r\n */\r\nasync function getToken(messaging, options) {\r\n    messaging = getModularInstance(messaging);\r\n    return getToken$1(messaging, options);\r\n}\r\n/**\r\n * Deletes the registration token associated with this {@link Messaging} instance and unsubscribes\r\n * the {@link Messaging} instance from the push subscription.\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n *\r\n * @returns The promise resolves when the token has been successfully deleted.\r\n *\r\n * @public\r\n */\r\nfunction deleteToken(messaging) {\r\n    messaging = getModularInstance(messaging);\r\n    return deleteToken$1(messaging);\r\n}\r\n/**\r\n * When a push message is received and the user is currently on a page for your origin, the\r\n * message is passed to the page and an `onMessage()` event is dispatched with the payload of\r\n * the push message.\r\n *\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n * @param nextOrObserver - This function, or observer object with `next` defined,\r\n *     is called when a message is received and the user is currently viewing your page.\r\n * @returns To stop listening for messages execute this returned function.\r\n *\r\n * @public\r\n */\r\nfunction onMessage(messaging, nextOrObserver) {\r\n    messaging = getModularInstance(messaging);\r\n    return onMessage$1(messaging, nextOrObserver);\r\n}\n\n/**\r\n * Firebase Cloud Messaging\r\n *\r\n * @packageDocumentation\r\n */\r\nregisterMessagingInWindow();\n\nexport { deleteToken, getMessagingInWindow as getMessaging, getToken, isWindowSupported as isSupported, onMessage };\n"]},"metadata":{},"sourceType":"module"}